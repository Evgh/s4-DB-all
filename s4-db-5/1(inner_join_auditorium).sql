USE E_Univer;

-- 1
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME FROM AUDITORIUM JOIN AUDITORIUM_TYPE 
																	ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

-- 2
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME FROM AUDITORIUM JOIN AUDITORIUM_TYPE 
																	ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE
																	AND AUDITORIUM_TYPE.AUDITORIUM_TYPENAME Like '%компьютер%';

-- 3
-- 3.1
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME FROM AUDITORIUM, AUDITORIUM_TYPE 
																	WHERE AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

-- 3.2
SELECT T1.AUDITORIUM, T2.AUDITORIUM_TYPENAME FROM AUDITORIUM as T1, AUDITORIUM_TYPE as T2 
																	WHERE T1.AUDITORIUM_TYPE = T2.AUDITORIUM_TYPE
																	AND T2.AUDITORIUM_TYPENAME Like '%компьютер%';

--4
SELECT [SUBJECT].SUBJECT_NAME[Предмет], PULPIT.PULPIT_NAME[Кафедра предмета],  
FACULTY.FACULTY_NAME[Факультет студента], PROFESSION.PROFESSION_NAME[Специальность], STUDENT.[NAME][Имя студента],

	CASE when (PROGRESS.NOTE = 6) then 'шесть'
		 when (PROGRESS.NOTE = 7) then 'семь'
		 else 'восемь'
		 end [Оценка]	
 
	FROM PROGRESS INNER JOIN STUDENT on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				  INNER JOIN GROUPS	on STUDENT.IDGROUP = GROUPS.IDGROUP
				  INNER JOIN PROFESSION on GROUPS.PROFESSION = PROFESSION.PROFESSION
				  INNER JOIN FACULTY on PROFESSION.FACULTY = FACULTY.FACULTY
				  
				  INNER JOIN [SUBJECT] on PROGRESS.[SUBJECT] = [SUBJECT].[SUBJECT]
				  INNER JOIN PULPIT on [SUBJECT].PULPIT = PULPIT.PULPIT
	
	WHERE PROGRESS.NOTE Between 6 and 8 

	Order by FACULTY.FACULTY, PULPIT.PULPIT, PROFESSION.PROFESSION, STUDENT.[NAME], PROGRESS.NOTE desc;

--5
SELECT [SUBJECT].SUBJECT_NAME[Предмет], PULPIT.PULPIT_NAME[Кафедра предмета],  
FACULTY.FACULTY_NAME[Факультет студента], PROFESSION.PROFESSION_NAME[Специальность], STUDENT.[NAME][Имя студента],

	CASE when (PROGRESS.NOTE = 6) then 'шесть'
		 when (PROGRESS.NOTE = 7) then 'семь'
		 else 'восемь'
		 end [Оценка]	
 
	FROM PROGRESS INNER JOIN STUDENT on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				  INNER JOIN GROUPS	on STUDENT.IDGROUP = GROUPS.IDGROUP
				  INNER JOIN PROFESSION on GROUPS.PROFESSION = PROFESSION.PROFESSION
				  INNER JOIN FACULTY on PROFESSION.FACULTY = FACULTY.FACULTY
				  
				  INNER JOIN [SUBJECT] on PROGRESS.[SUBJECT] = [SUBJECT].[SUBJECT]
				  INNER JOIN PULPIT on [SUBJECT].PULPIT = PULPIT.PULPIT
	
	WHERE PROGRESS.NOTE Between 6 and 8 

	Order by FACULTY.FACULTY, PULPIT.PULPIT, PROFESSION.PROFESSION, STUDENT.[NAME],
			(CASE
					When (PROGRESS.NOTE = 7) then 1
					When (PROGRESS.NOTE = 8) then 2
					else 3	
				END)

-- 6
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT LEFT OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
		ORDER BY PULPIT.PULPIT_NAME;

--7
-- не правильно
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT RIGHT OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
		ORDER BY PULPIT.PULPIT_NAME;

-- правильно
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM TEACHER RIGHT OUTER JOIN PULPIT on TEACHER.PULPIT = PULPIT.PULPIT
		ORDER BY PULPIT.PULPIT_NAME;

-- 8
-- ДОКАЗАТЕЛЬСТВА
-- коммутативность

SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM TEACHER FULL OUTER JOIN PULPIT on TEACHER.PULPIT = PULPIT.PULPIT
		ORDER BY PULPIT.PULPIT_NAME, TEACHER.TEACHER_NAME;

SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT FULL OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
		ORDER BY PULPIT.PULPIT_NAME, TEACHER.TEACHER_NAME;

-- объединяет результаты left join right join
(SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***') [Преподаватель] 	
		FROM PULPIT LEFT OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
UNION
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***') [Преподаватель] 	
		FROM PULPIT RIGHT OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT)
EXCEPT 
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT FULL OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT;
		

-- включает соединение inner join
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM TEACHER JOIN PULPIT on TEACHER.PULPIT = PULPIT.PULPIT
EXCEPT
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM TEACHER FULL OUTER JOIN PULPIT on TEACHER.PULPIT = PULPIT.PULPIT

-- 8.1 
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM TEACHER FULL OUTER JOIN PULPIT on TEACHER.PULPIT = PULPIT.PULPIT
		WHERE TEACHER.TEACHER_NAME is null
		ORDER BY PULPIT.PULPIT_NAME;

-- 8.2
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT FULL OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
		WHERE PULPIT.PULPIT_NAME is null
		ORDER BY PULPIT.PULPIT_NAME;

-- 8.3
SELECT PULPIT.PULPIT_NAME[Кафедра], isnull(TEACHER.TEACHER_NAME, '***')[Преподаватель] 	
		FROM PULPIT FULL OUTER JOIN TEACHER on TEACHER.PULPIT = PULPIT.PULPIT
		WHERE PULPIT.PULPIT_NAME is not null AND TEACHER.TEACHER_NAME is not null
		ORDER BY PULPIT.PULPIT_NAME;

-- 9
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
		FROM AUDITORIUM CROSS JOIN AUDITORIUM_TYPE
		WHERE AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE;

