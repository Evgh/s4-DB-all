-- 1
USE E_Univer;
SELECT 
		min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная вместимость],  
		max(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная вместимость],  
		avg(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя вместимость],
		sum(AUDITORIUM.AUDITORIUM_CAPACITY) [Общая вместимость],
		count(AUDITORIUM.AUDITORIUM_CAPACITY) [Количество аудиторий]
	FROM AUDITORIUM

-- 2
USE E_Univer;
SELECT 
		AUDITORIUM_TYPE.AUDITORIUM_TYPENAME [Тип],
		min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная вместимость],  
		max(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная вместимость], 
		avg(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя вместимость],
		sum(AUDITORIUM.AUDITORIUM_CAPACITY) [Общая вместимость],
		count(AUDITORIUM.AUDITORIUM_CAPACITY) [Количество аудиторий]
	FROM AUDITORIUM_TYPE join AUDITORIUM on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE
	GROUP BY AUDITORIUM_TYPE.AUDITORIUM_TYPENAME;

-- 3
USE E_Univer;
SELECT *
		FROM 
		(
		SELECT 
			case 
			when PROGRESS.NOTE = 10 then '10'
			when PROGRESS.NOTE between 8 and 9 then '9-8'
			when PROGRESS.NOTE between 6 and 7 then '7-6'
			when PROGRESS.NOTE between 4 and 5 then '5-4'
			end [Оценки], 
			COUNT(*)[Количество]
		FROM PROGRESS 
		GROUP BY 
			case 
			when PROGRESS.NOTE = 10 then '10'
			when PROGRESS.NOTE between 8 and 9 then '9-8'
			when PROGRESS.NOTE between 6 and 7 then '7-6'
			when PROGRESS.NOTE between 4 and 5 then '5-4'
			end
		) as T
		ORDER BY Оценки desc;

-- 4
USE E_Univer;
SELECT 
		FACULTY.FACULTY [Факультет], 
		PROFESSION.PROFESSION_NAME [Специальность],
		2014 - GROUPS.YEAR_FIRST [Курс],
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION and GROUPS.FACULTY = FACULTY.FACULTY
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
	GROUP BY 
		FACULTY.FACULTY,
		PROFESSION.PROFESSION_NAME,
		GROUPS.YEAR_FIRST;

-- 4.1
USE E_Univer;
SELECT 
		FACULTY.FACULTY [Факультет], 
		PROFESSION.PROFESSION_NAME [Специальность],
		2014 - GROUPS.YEAR_FIRST [Курс],
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
	WHERE PROGRESS.SUBJECT = 'СУБД' or PROGRESS.SUBJECT = 'ОАиП' 
	GROUP BY 
		FACULTY.FACULTY,
		PROFESSION.PROFESSION_NAME,
		GROUPS.YEAR_FIRST;

-- 5 
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT;
-- 5.1
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		--FACULTY.FACULTY = 'ТОВ' OR FACULTY.FACULTY = 'ХТиТ'
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY ROLLUP (
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT);

-- 6
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		--FACULTY.FACULTY = 'ТОВ' OR FACULTY.FACULTY = 'ХТиТ'
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY CUBE (
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT);

-- 7 
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT
UNION
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ХТиТ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT;

USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT
UNION ALL
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ХТиТ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT;

-- 8
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ТОВ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT
INTERSECT  
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ХТиТ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT;

-- 9
USE E_Univer;
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT
EXCEPT  
SELECT
		FACULTY.FACULTY_NAME, 
		PROFESSION.PROFESSION_NAME,
		SUBJECT.SUBJECT,
		round (avg( cast(Progress.NOTE as float(4))), 2) [Средняя оценка]
	FROM 
		FACULTY join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		join GROUPS on GROUPS.PROFESSION = PROFESSION.PROFESSION
		join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		join PROGRESS on PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
		join SUBJECT on PROGRESS.SUBJECT = SUBJECT.SUBJECT
	WHERE 
		FACULTY.FACULTY = 'ХТиТ'
	GROUP BY 
		FACULTY_NAME, 
		PROFESSION_NAME, 
		SUBJECT.SUBJECT;

-- 10 
USE E_Univer;
SELECT
		SUBJECT.SUBJECT,
		a.NOTE,
		(
		SELECT count(*) 
		FROM PROGRESS
		WHERE PROGRESS.SUBJECT = SUBJECT.SUBJECT
		and a.NOTE = PROGRESS.NOTE) [Количество]
   
	FROM SUBJECT join PROGRESS a on SUBJECT.SUBJECT = a.SUBJECT 
    GROUP BY SUBJECT.SUBJECT, a.NOTE
    HAVING a.NOTE = 8 or a.NOTE = 9
    ORDER BY Количество desc


-- 12 
SELECT  
		FACULTY.FACULTY_NAME [Факультет],
		GROUPS.IDGROUP [Номер группы],
		count(*) [Количество студентов]

		FROM FACULTY join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
				join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
		
		GROUP BY rollup (FACULTY_NAME, GROUPS.IDGROUP);

-- 12.1
SELECT 
		AUDITORIUM.AUDITORIUM_TYPE,
		case 
		when (AUDITORIUM.AUDITORIUM_NAME like '%1') then '1'
		when (AUDITORIUM.AUDITORIUM_NAME like '%2') then '2'
		end [Корпус],
		sum(AUDITORIUM.AUDITORIUM_CAPACITY) [cуммарная вместимость], 
		count(*)[количество аудиторий]
		
		FROM AUDITORIUM
		GROUP BY cube (AUDITORIUM.AUDITORIUM_TYPE, 
		(case 
		when (AUDITORIUM.AUDITORIUM_NAME like '%1') then '1'
		when (AUDITORIUM.AUDITORIUM_NAME like '%2') then '2'
		end)); 
