USE E_Univer;

-- 1 
SELECT PULPIT.PULPIT_NAME 
		FROM PULPIT, FACULTY
		WHERE PULPIT.FACULTY = FACULTY.FACULTY
		and FACULTY.FACULTY in (
								SELECT FACULTY.FACULTY FROM FACULTY, PROFESSION
									WHERE PROFESSION.FACULTY = FACULTY.FACULTY
									and (PROFESSION.PROFESSION_NAME like'%технология%' or PROFESSION.PROFESSION_NAME like'%технологии%')
								)

-- 2
SELECT PULPIT.PULPIT_NAME 
		FROM PULPIT join FACULTY
		on PULPIT.FACULTY = FACULTY.FACULTY
		and FACULTY.FACULTY in (
								SELECT FACULTY.FACULTY FROM FACULTY, PROFESSION
									WHERE PROFESSION.FACULTY = FACULTY.FACULTY
									and (PROFESSION.PROFESSION_NAME like'%технология%' or PROFESSION.PROFESSION_NAME like'%технологии%')
								)

-- 3
SELECT distinct PULPIT.PULPIT_NAME
		FROM PULPIT Join FACULTY on PULPIT.FACULTY = FACULTY.FACULTY
					Join PROFESSION on PROFESSION.FACULTY = FACULTY.FACULTY
		WHERE PROFESSION.PROFESSION_NAME like'%технология%' or PROFESSION.PROFESSION_NAME like'%технологии%'

-- 4
SELECT AUDITORIUM.AUDITORIUM_TYPE, AUDITORIUM.AUDITORIUM_NAME, AUDITORIUM.AUDITORIUM_CAPACITY 
		FROM AUDITORIUM, AUDITORIUM_TYPE as T1 
		WHERE AUDITORIUM.AUDITORIUM_TYPE = T1.AUDITORIUM_TYPE
		and AUDITORIUM.AUDITORIUM = (SELECT top(1) AUDITORIUM.AUDITORIUM
										FROM AUDITORIUM
										WHERE AUDITORIUM.AUDITORIUM_TYPE = T1.AUDITORIUM_TYPE
										ORDER BY AUDITORIUM.AUDITORIUM_CAPACITY desc 
									)

-- 5
SELECT * FROM FACULTY 
	WHERE not exists (SELECT * FROM PULPIT WHERE PULPIT.FACULTY = FACULTY.FACULTY)

-- 6
SELECT top(1) 
	(SELECT avg(NOTE) FROM PROGRESS WHERE PROGRESS.[SUBJECT] = 'ОАиП') [ОАИП],
	(SELECT avg(NOTE) FROM PROGRESS WHERE PROGRESS.[SUBJECT] = 'СУБД') [СУБД],
	(SELECT avg(NOTE) FROM PROGRESS WHERE PROGRESS.[SUBJECT] = 'КГ') [КГ]
	FROM PROGRESS

--7
select AUDITORIUM.AUDITORIUM_NAME, AUDITORIUM.AUDITORIUM_CAPACITY
from AUDITORIUM where AUDITORIUM_CAPACITY >all (select AUDITORIUM_CAPACITY from AUDITORIUM where AUDITORIUM_TYPE = 'ЛК-К');

--8
select AUDITORIUM.AUDITORIUM_NAME, AUDITORIUM.AUDITORIUM_CAPACITY
from AUDITORIUM where AUDITORIUM_CAPACITY <any (select AUDITORIUM_CAPACITY from AUDITORIUM where AUDITORIUM_TYPE = 'ЛК');


--10
-- студенты с их парами  
SELECT a.NAME, a.BDAY[День рождения первого], aa.NAME [Имя второго], aa.BDAY[День рождения второго]
		FROM STUDENT as a CROSS JOIN STUDENT as aa 
		WHERE a.IDSTUDENT != aa.IDSTUDENT AND a.BDAY = aa.BDAY 			
		ORDER BY a.BDAY;

-- список студентов, которые имеют пары
SELECT STUDENT.NAME 
		FROM STUDENT 
		WHERE STUDENT.NAME =any (SELECT a.NAME
									FROM STUDENT as a CROSS JOIN STUDENT as aa 
									WHERE a.IDSTUDENT != aa.IDSTUDENT AND a.BDAY = aa.BDAY)			
		ORDER BY STUDENT.NAME;

